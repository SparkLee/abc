name: Publish to Docker Hub and Deploy to Server

on:
  workflow_run:
    workflows: ["Build and Upload Artifacts"]
    # workflows: ["我依赖是一个不存在的 workflow 完成后才执行，用此方法禁用本 workflow！"]
    types: [completed]

env:
  DOCKERHUB_PAT: ${{ secrets.DOCKERHUB_PERSONAL_ACCESS_TOKEN }}
  SSH_REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
  SSH_REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_114_132_232_154 }}

jobs:
  publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          # 若要下载其他workflow或其他仓库的artifact则必须指定github-token/run-id
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}

      - run: tree ./

      - name: Build docker image
        run: docker compose build

      - name: Push docker image to Docker Hub
        run: |
          docker login -u sparklee -p $DOCKERHUB_PAT
          docker push sparklee/abc:latest

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - run: |
          echo $SSH_REMOTE_HOST > x
          echo $SSH_REMOTE_USER >> x
          echo $SSH_PRIVATE_KEY >> x
          cat x
          tree /home/runner/.ssh
      # https://github.com/marketplace/actions/ssh-deploy
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          REMOTE_HOST: $SSH_REMOTE_HOST
          REMOTE_USER: $SSH_REMOTE_USER
          SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
          # 其实只需要执行命令，无需 rsync 同步待部署文件，但是 ssh-deploy 插件中没有选项可以关闭 rsync，故同步一个小文件得了。
          SOURCE: 'dist/index.html'
          TARGET: '/tmp/dist'
          # Deployment Failed, Permission denied (publickey,password): This issue occures in some cases, it is related to OS and ssh.
          # This action can only provide a workaround: Use SCRIPT_BEFORE param, eg SCRIPT_BEFORE: ls. This will force known_hosts update
          # https://github.com/marketplace/actions/ssh-deploy#issues
          SCRIPT_BEFORE: ls
          SCRIPT_AFTER: |
            cd /opt/qf-miscellany/docker/sparklee/my-abc
            docker compose up -d --pull always
            docker image prune -f